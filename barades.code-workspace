{
  "folders": [
    {
      "name": "üè† Barades (Root)",
      "path": "."
    },
    {
      "name": "üñ•Ô∏è Backend",
      "path": "apps/backend"
    },
    {
      "name": "üåê Frontend",
      "path": "apps/frontend"
    },
    {
      "name": "üì¶ UI Library",
      "path": "packages/ui"
    },
    {
      "name": "üìö Documentation",
      "path": "doc"
    }
  ],
  "settings": {
    // Editor
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "explicit"
    },
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.rulers": [80, 120],
    "editor.wordWrap": "on",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,

    // Files
    "files.eol": "\n",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.exclude": {
      "**/.git": true,
      "**/.DS_Store": true,
      "**/node_modules": true,
      "**/dist": true,
      "**/.angular": true,
      "**/coverage": true,
      "**/.nx": true
    },
    "files.watcherExclude": {
      "**/.git/objects/**": true,
      "**/node_modules/**": true,
      "**/dist/**": true,
      "**/.angular/**": true,
      "**/coverage/**": true
    },

    // Search
    "search.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/.angular": true,
      "**/coverage": true,
      "**/.nx": true,
      "**/package-lock.json": true
    },

    // TypeScript
    "typescript.tsdk": "üè† Barades (Root)/node_modules/typescript/lib",
    "typescript.enablePromptUseWorkspaceTsdk": true,
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.updateImportsOnFileMove.enabled": "always",

    // JavaScript/TypeScript validation
    "javascript.format.enable": false,
    "typescript.format.enable": false,

    // ESLint
    "eslint.validate": [
      "javascript",
      "javascriptreact",
      "typescript",
      "typescriptreact"
    ],
    "eslint.workingDirectories": [{ "mode": "auto" }],

    // Prettier
    "prettier.enable": true,
    "prettier.requireConfig": false,

    // Angular
    "angular.enable-strict-mode-prompt": false,

    // Nx
    "nxConsole.enableTelemetry": false,
    "nxConsole.showNodeVersionOnStartup": false,

    // Git
    "git.ignoreLimitWarning": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,

    // Terminal
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.scrollback": 10000,

    // Testing
    "jest.runMode": "on-demand",

    // Prisma
    "[prisma]": {
      "editor.defaultFormatter": "Prisma.prisma",
      "editor.formatOnSave": true
    },

    // HTML
    "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true
    },

    // CSS/SCSS
    "[css]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[scss]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

    // JSON
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

    // Markdown
    "[markdown]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.wordWrap": "on",
      "editor.quickSuggestions": {
        "comments": "off",
        "strings": "off",
        "other": "off"
      }
    }
  },
  "extensions": {
    "recommendations": [
      // Essentials
      "nrwl.angular-console",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",

      // Angular
      "angular.ng-template",

      // Prisma
      "prisma.prisma",

      // Testing
      "orta.vscode-jest",
      "ms-playwright.playwright",

      // Git
      "eamodio.gitlens",

      // Utilities
      "streetsidesoftware.code-spell-checker",
      "wayou.vscode-todo-highlight",
      "gruntfuggly.todo-tree",
      "usernamehw.errorlens",
      "christian-kohler.path-intellisense",
      "visualstudioexptteam.vscodeintellicode",

      // Tailwind
      "bradlc.vscode-tailwindcss",

      // Icons
      "pkief.material-icon-theme"
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Debug frontend with Chrome",
        "type": "chrome",
        "request": "launch",
        "url": "http://localhost:4200",
        "webRoot": "${workspaceFolder}/apps/frontend",
        "sourceMapPathOverrides": {
          "webpack:/*": "${workspaceFolder}/*"
        }
      },
      {
        "name": "Debug backend with Nx",
        "type": "node",
        "request": "launch",
        "runtimeExecutable": "npx",
        "runtimeArgs": ["nx", "serve", "backend"],
        "console": "integratedTerminal",
        "cwd": "${workspaceFolder}",
        "skipFiles": ["<node_internals>/**"],
        "env": {
          "NODE_ENV": "development"
        }
      },
      {
        "name": "Debug Jest current file",
        "type": "node",
        "request": "launch",
        "runtimeExecutable": "npx",
        "runtimeArgs": [
          "jest",
          "--runInBand",
          "--testPathPattern=${fileBasename}",
          "--coverage=false"
        ],
        "console": "integratedTerminal",
        "internalConsoleOptions": "neverOpen"
      },
      {
        "name": "Debug Playwright tests",
        "type": "node",
        "request": "launch",
        "runtimeExecutable": "npx",
        "runtimeArgs": ["playwright", "test", "--debug"],
        "console": "integratedTerminal",
        "cwd": "${workspaceFolder}/apps/frontend-e2e"
      }
    ],
    "compounds": [
      {
        "name": "Debug full stack",
        "configurations": [
          "Debug frontend with Chrome",
          "Debug backend with Nx"
        ],
        "stopAll": true
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "üèóÔ∏è Build All",
        "type": "shell",
        "command": "npx nx run-many -t build",
        "group": "build",
        "problemMatcher": ["$tsc"]
      },
      {
        "label": "üß™ Test All",
        "type": "shell",
        "command": "npx nx run-many -t test",
        "group": "test",
        "problemMatcher": ["$tsc"]
      },
      {
        "label": "üîç Lint All",
        "type": "shell",
        "command": "npx nx run-many -t lint",
        "group": "none",
        "problemMatcher": ["$eslint-stylish"]
      },
      {
        "label": "üéØ Nx Graph",
        "type": "shell",
        "command": "npx nx graph",
        "group": "none",
        "problemMatcher": []
      },
      {
        "label": "üóÑÔ∏è Prisma Studio",
        "type": "shell",
        "command": "cd apps/backend && npx prisma studio",
        "group": "none",
        "problemMatcher": [],
        "isBackground": true
      },
      {
        "label": "üîÑ Prisma Generate",
        "type": "shell",
        "command": "cd apps/backend && npx prisma generate",
        "group": "none",
        "problemMatcher": []
      },
      {
        "label": "üìä Prisma Migrate Dev",
        "type": "shell",
        "command": "cd apps/backend && npx prisma migrate dev",
        "group": "none",
        "problemMatcher": []
      }
    ]
  }
}
